dependencies {
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "jakarta.servlet:jakarta.servlet-api:$servletApiVersion"
    implementation "org.grails:grails-core:$grailsVersion"
    implementation "org.grails:grails-dependencies:$grailsVersion", {
        exclude module:'grails-datastore-simple'
    }
    implementation "org.grails:grails-web-boot:$grailsVersion"
    implementation project(":grails-plugin")
    implementation("org.ysb33r.gradle:grolifant50:2.0.2")

    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    runtimeOnly "com.h2database:h2:$h2Version"

    implementation "org.mongodb:mongodb-driver-sync:$mongodbDriverVersion"
    runtimeOnly "org.grails.plugins:scaffolding:$scaffoldingVersion"
    runtimeOnly "io.github.gpc:fields:$fieldsVersion"

    testImplementation "org.grails:grails-gorm-testing-support:$testingSupportVersion"
    testImplementation "org.grails:grails-web-testing-support:$testingSupportVersion"
    testImplementation("org.grails.plugins:geb:$gebPluginVersion") {
        exclude group: 'org.gebish', module: 'geb-spock'
    }
    testImplementation "org.gebish:geb-spock:$gebVersion"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-safari-driver:$seleniumSafariDriverVersion"

    testImplementation "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"
    testImplementation "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    testImplementation "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if ((details.requested.group == 'org.codehaus.groovy')) {
            details.useTarget(group: 'org.apache.groovy', name: details.requested.name, version: "$groovyVersion")
            details.because "The dependency coordinates are changed in Apache Groovy 4, plus ensure version"
        }
    }
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    if (!System.getenv().containsKey('CI')) {
        systemProperty 'webdriver.chrome.driver', System.getProperty('webdriver.chrome.driver')
        systemProperty 'webdriver.gecko.driver', System.getProperty('webdriver.gecko.driver')
    } else {
        systemProperty 'webdriver.chrome.driver', "${System.getenv('CHROMEWEBDRIVER')}/chromedriver"
        systemProperty 'webdriver.gecko.driver', "${System.getenv('GECKOWEBDRIVER')}/geckodriver"
    }
}

webdriverBinaries {
    if (!System.getenv().containsKey('CI')) {
        chromedriver "$chromeDriverVersion"
        geckodriver "$geckodriverVersion"
    }
}
