plugins {
    id "com.gradle.enterprise" version "3.16.1"
    id 'com.gradle.common-custom-user-data-gradle-plugin' version '1.12.1'
}

gradleEnterprise {
    server = 'https://ge.grails.org'
    buildScan {
        publishAlwaysIf(System.getenv('CI') == 'true')
        publishIfAuthenticated()
        uploadInBackground = System.getenv("CI") == null
        capture {
            taskInputFiles = true
        }
    }
}

buildCache {
    local { enabled = System.getenv('CI') != 'true' }
    remote(HttpBuildCache) {
        push = System.getenv('CI') == 'true'
        enabled = true
        url = 'https://ge.grails.org/cache/'
        credentials {
            username = System.getenv('GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER')
            password = System.getenv('GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY')
        }
    }}


// core
include "grails-datastore-gorm-bson"
include "grails-datastore-gorm-mongodb"
include "grails-datastore-gorm-mongodb-ext"

// documentation
include 'docs'

// plugins
include "boot-plugin"
project(':boot-plugin').name = 'gorm-mongodb-spring-boot'
include 'grails-plugin'

// examples
include 'examples-grails3-mongodb'
project(":examples-grails3-mongodb").projectDir = new File(settingsDir, "examples/grails3-mongodb")

include 'examples-grails3-mongodb-database-per-tenant'
project(":examples-grails3-mongodb-database-per-tenant").projectDir = new File(settingsDir, "examples/grails3-mongodb-database-per-tenant")

include 'examples-grails3-hibernate5-mongodb'
project(":examples-grails3-hibernate5-mongodb").projectDir = new File(settingsDir, "examples/grails3-hibernate5-mongodb")

include 'examples-springboot-mongodb'
project(":examples-springboot-mongodb").projectDir = new File(settingsDir, "examples/springboot-mongodb")

include 'examples-test-data-service'
project(":examples-test-data-service").projectDir = new File(settingsDir, "examples/test-data-service")



